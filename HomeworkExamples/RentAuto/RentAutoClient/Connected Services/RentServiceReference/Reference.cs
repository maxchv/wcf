//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;

namespace RentAutoClient.RentServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RentServiceReference.IRentService")]
    public interface IRentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentService/GetAllCars", ReplyAction="http://tempuri.org/IRentService/GetAllCarsResponse")]
        string[] GetAllCars();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentService/GetAllCars", ReplyAction="http://tempuri.org/IRentService/GetAllCarsResponse")]
        System.Threading.Tasks.Task<string[]> GetAllCarsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentService/AddCar", ReplyAction="http://tempuri.org/IRentService/AddCarResponse")]
        void AddCar(string brand, decimal rent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentService/AddCar", ReplyAction="http://tempuri.org/IRentService/AddCarResponse")]
        System.Threading.Tasks.Task AddCarAsync(string brand, decimal rent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentService/RemoveCar", ReplyAction="http://tempuri.org/IRentService/RemoveCarResponse")]
        void RemoveCar(string brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentService/RemoveCar", ReplyAction="http://tempuri.org/IRentService/RemoveCarResponse")]
        System.Threading.Tasks.Task RemoveCarAsync(string brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentService/GetRent", ReplyAction="http://tempuri.org/IRentService/GetRentResponse")]
        decimal GetRent(System.DateTime start, System.DateTime end, string brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRentService/GetRent", ReplyAction="http://tempuri.org/IRentService/GetRentResponse")]
        System.Threading.Tasks.Task<decimal> GetRentAsync(System.DateTime start, System.DateTime end, string brand);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRentServiceChannel : RentAutoClient.RentServiceReference.IRentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RentServiceClient : System.ServiceModel.ClientBase<RentAutoClient.RentServiceReference.IRentService>, RentAutoClient.RentServiceReference.IRentService {
        
        public RentServiceClient() {
        }
        
        public RentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetAllCars() {
            return base.Channel.GetAllCars();
        }
        
        public System.Threading.Tasks.Task<string[]> GetAllCarsAsync() {
            return base.Channel.GetAllCarsAsync();
        }
        
        public void AddCar(string brand, decimal rent) {
            base.Channel.AddCar(brand, rent);
        }
        
        public System.Threading.Tasks.Task AddCarAsync(string brand, decimal rent) {
            return base.Channel.AddCarAsync(brand, rent);
        }
        
        public void RemoveCar(string brand) {
            base.Channel.RemoveCar(brand);
        }
        
        public System.Threading.Tasks.Task RemoveCarAsync(string brand) {
            return base.Channel.RemoveCarAsync(brand);
        }
        
        public decimal GetRent(System.DateTime start, System.DateTime end, string brand) {
            return base.Channel.GetRent(start, end, brand);
        }
        
        public System.Threading.Tasks.Task<decimal> GetRentAsync(System.DateTime start, System.DateTime end, string brand) {
            return base.Channel.GetRentAsync(start, end, brand);
        }
    }
}
