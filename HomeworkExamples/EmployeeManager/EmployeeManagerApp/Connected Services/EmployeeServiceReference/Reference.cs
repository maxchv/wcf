//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmployeeManagerApp.EmployeeServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/Host")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmployeeManagerApp.EmployeeServiceReference.FullTimeEmployee))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmployeeManagerApp.EmployeeServiceReference.PartTimeEmployee))]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmployeeManagerApp.EmployeeServiceReference.Gender GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmployeeManagerApp.EmployeeServiceReference.EmployeeType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmployeeManagerApp.EmployeeServiceReference.Gender Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmployeeManagerApp.EmployeeServiceReference.EmployeeType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FullTimeEmployee", Namespace="http://schemas.datacontract.org/2004/07/Host")]
    [System.SerializableAttribute()]
    public partial class FullTimeEmployee : EmployeeManagerApp.EmployeeServiceReference.Employee {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MonthSallaryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MonthSallary {
            get {
                return this.MonthSallaryField;
            }
            set {
                if ((this.MonthSallaryField.Equals(value) != true)) {
                    this.MonthSallaryField = value;
                    this.RaisePropertyChanged("MonthSallary");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartTimeEmployee", Namespace="http://schemas.datacontract.org/2004/07/Host")]
    [System.SerializableAttribute()]
    public partial class PartTimeEmployee : EmployeeManagerApp.EmployeeServiceReference.Employee {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HourlyPayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HoursWorkedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HourlyPay {
            get {
                return this.HourlyPayField;
            }
            set {
                if ((this.HourlyPayField.Equals(value) != true)) {
                    this.HourlyPayField = value;
                    this.RaisePropertyChanged("HourlyPay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HoursWorked {
            get {
                return this.HoursWorkedField;
            }
            set {
                if ((this.HoursWorkedField.Equals(value) != true)) {
                    this.HoursWorkedField = value;
                    this.RaisePropertyChanged("HoursWorked");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gender", Namespace="http://schemas.datacontract.org/2004/07/Host")]
    public enum Gender : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeType", Namespace="http://schemas.datacontract.org/2004/07/Host")]
    public enum EmployeeType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FullTimeEmployee = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTimeEmployee = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeeServiceReference.IManagerService")]
    public interface IManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetFullTimeEmployee", ReplyAction="http://tempuri.org/IManagerService/GetFullTimeEmployeeResponse")]
        EmployeeManagerApp.EmployeeServiceReference.Employee GetFullTimeEmployee(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetFullTimeEmployee", ReplyAction="http://tempuri.org/IManagerService/GetFullTimeEmployeeResponse")]
        System.Threading.Tasks.Task<EmployeeManagerApp.EmployeeServiceReference.Employee> GetFullTimeEmployeeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetPartTimeEmployee", ReplyAction="http://tempuri.org/IManagerService/GetPartTimeEmployeeResponse")]
        EmployeeManagerApp.EmployeeServiceReference.Employee GetPartTimeEmployee(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetPartTimeEmployee", ReplyAction="http://tempuri.org/IManagerService/GetPartTimeEmployeeResponse")]
        System.Threading.Tasks.Task<EmployeeManagerApp.EmployeeServiceReference.Employee> GetPartTimeEmployeeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetAllEmployees", ReplyAction="http://tempuri.org/IManagerService/GetAllEmployeesResponse")]
        EmployeeManagerApp.EmployeeServiceReference.Employee[] GetAllEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/GetAllEmployees", ReplyAction="http://tempuri.org/IManagerService/GetAllEmployeesResponse")]
        System.Threading.Tasks.Task<EmployeeManagerApp.EmployeeServiceReference.Employee[]> GetAllEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/AddEmployee", ReplyAction="http://tempuri.org/IManagerService/AddEmployeeResponse")]
        int AddEmployee(EmployeeManagerApp.EmployeeServiceReference.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/AddEmployee", ReplyAction="http://tempuri.org/IManagerService/AddEmployeeResponse")]
        System.Threading.Tasks.Task<int> AddEmployeeAsync(EmployeeManagerApp.EmployeeServiceReference.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/RemoveEmployee", ReplyAction="http://tempuri.org/IManagerService/RemoveEmployeeResponse")]
        bool RemoveEmployee(EmployeeManagerApp.EmployeeServiceReference.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/RemoveEmployee", ReplyAction="http://tempuri.org/IManagerService/RemoveEmployeeResponse")]
        System.Threading.Tasks.Task<bool> RemoveEmployeeAsync(EmployeeManagerApp.EmployeeServiceReference.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/UpdateEmployee", ReplyAction="http://tempuri.org/IManagerService/UpdateEmployeeResponse")]
        bool UpdateEmployee(EmployeeManagerApp.EmployeeServiceReference.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/UpdateEmployee", ReplyAction="http://tempuri.org/IManagerService/UpdateEmployeeResponse")]
        System.Threading.Tasks.Task<bool> UpdateEmployeeAsync(EmployeeManagerApp.EmployeeServiceReference.Employee employee);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IManagerServiceChannel : EmployeeManagerApp.EmployeeServiceReference.IManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ManagerServiceClient : System.ServiceModel.ClientBase<EmployeeManagerApp.EmployeeServiceReference.IManagerService>, EmployeeManagerApp.EmployeeServiceReference.IManagerService {
        
        public ManagerServiceClient() {
        }
        
        public ManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public EmployeeManagerApp.EmployeeServiceReference.Employee GetFullTimeEmployee(int id) {
            return base.Channel.GetFullTimeEmployee(id);
        }
        
        public System.Threading.Tasks.Task<EmployeeManagerApp.EmployeeServiceReference.Employee> GetFullTimeEmployeeAsync(int id) {
            return base.Channel.GetFullTimeEmployeeAsync(id);
        }
        
        public EmployeeManagerApp.EmployeeServiceReference.Employee GetPartTimeEmployee(int id) {
            return base.Channel.GetPartTimeEmployee(id);
        }
        
        public System.Threading.Tasks.Task<EmployeeManagerApp.EmployeeServiceReference.Employee> GetPartTimeEmployeeAsync(int id) {
            return base.Channel.GetPartTimeEmployeeAsync(id);
        }
        
        public EmployeeManagerApp.EmployeeServiceReference.Employee[] GetAllEmployees() {
            return base.Channel.GetAllEmployees();
        }
        
        public System.Threading.Tasks.Task<EmployeeManagerApp.EmployeeServiceReference.Employee[]> GetAllEmployeesAsync() {
            return base.Channel.GetAllEmployeesAsync();
        }
        
        public int AddEmployee(EmployeeManagerApp.EmployeeServiceReference.Employee employee) {
            return base.Channel.AddEmployee(employee);
        }
        
        public System.Threading.Tasks.Task<int> AddEmployeeAsync(EmployeeManagerApp.EmployeeServiceReference.Employee employee) {
            return base.Channel.AddEmployeeAsync(employee);
        }
        
        public bool RemoveEmployee(EmployeeManagerApp.EmployeeServiceReference.Employee employee) {
            return base.Channel.RemoveEmployee(employee);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveEmployeeAsync(EmployeeManagerApp.EmployeeServiceReference.Employee employee) {
            return base.Channel.RemoveEmployeeAsync(employee);
        }
        
        public bool UpdateEmployee(EmployeeManagerApp.EmployeeServiceReference.Employee employee) {
            return base.Channel.UpdateEmployee(employee);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateEmployeeAsync(EmployeeManagerApp.EmployeeServiceReference.Employee employee) {
            return base.Channel.UpdateEmployeeAsync(employee);
        }
    }
}
